Flask, a minimalistic web framework which turns request handling into its most basic possible form, a function. To get started, create a file ending in.py and import flask. Then create an application object with the flask constructor. Define a function which returns some data and decorate it with app.route and a path. This function will now be called whenever a request hits the server with this path and the return value will be sent back to the client. To handle other HTTP verbs, pass the methods argument to app.route. What if you want to use query parameters? Simply reference flask.request.args to get a dictionary of them. For dynamic paths, wrap a node with ankle brackets and accept it as a parameter to the function. access cookies with flask.request.cookies and to create new ones, wrap your content with flask.maketheresponse. You can then edit response headers or just use.setCookie with a key and a value for it to be sent back in subsequent requests. But what about files? Create a static directory and then anyone will be able to access files within with url slash static slash followed by the file name. You can also return a specific file from a route function with flask.send file. Flask supports GINJA, a templating engine for embedding Python into HTML and rendering it on the server. To use GINJA, create a templates folder and a regular old.html file. Within this file, you can evaluate Python expressions with double curly braces. Now outputs will be rendered into the file. Use curly braces with percentage signs to create flocks. Anything within an if flock will only render if the pass condition is true. Similarly, anything within a for block will render once for every iteration of the loop. In your Python code, use flask.render template with the name of the file you wish to render. Pass as many keyword arguments as you want, containing all the data you used within the template. Once your app is ready, run it with the proper WSGI server. For another development setting, just slap app.run at the end of the file. That was a bite of flask. I hope you enjoyed and thanks for watching.